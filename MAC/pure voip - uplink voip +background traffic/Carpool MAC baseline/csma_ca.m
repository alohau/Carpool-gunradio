%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%Script
for STANum = 10:4:30
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%Script
clc;close all;clearvars -global -except STANum;clearvars -except STANum;
run parameter.m;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Global Parameter
global MTU;
global RTS_size CTS_size ACK_size;
global CCA_time SLOT_time SIFS_time DIFS_time RTS_time CTS_time ACK_time PLCP_time;
global CW_min CW_max;
global RATE_List AP_List CLIENT_List SEND_List RECEIVE_List Event_List;
global APNum ClientNum;
global Node Pkt_Buff;
% Debug related
global debug AckCount_List CrackCount_List collisionCount crackCount SentPktCount_List;
global AggregationByteCount  AggregationUserCount AggregationPktNum_Ack_Count Count;
global Buff_len_List;
global CW_List;
global PDR_List CRC_List;
% others
global busy collision;
global DATA_Rate Basic_Rate;
% Traffic related
global Traffic_interval;
global Traffic_delay_List Client_Traffic_interval;
% Aggregation related
global Aggregation_delay Aggregation_ra_num Aggregation_byte Pkt_Buff_len Aggregation_ra_index_List Aggregation_ra_List Ack_List;
% USRP PHY Trace
global Baseline Enhancement;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%Script
AP_List = (1:STANum*2 + 2);
CLIENT_List = (STANum*2 + 2 + 1:(STANum*2 + 2)*(STANum+1));
APNum = length(AP_List);
ClientNum = length(CLIENT_List); 
RECEIVE_List = cell(1,APNum);
Traffic_interval = 20*1e-3/STANum;
Pkt_Buff_len = floor(1000*1e-3/Traffic_interval);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%Script
% Simulation Parameter
% Debug related
debug = 1; 
AckCount_List = cell(1,APNum); AckCount_List(:) = {0}; 
CrackCount_List = cell(1,APNum);CrackCount_List(:) = {0};
collisionCount = 0;crackCount = 0;
SentPktCount_List = cell(1,APNum);SentPktCount_List(:) = {0};% bit
AggregationByteCount = cell(1,APNum);
AggregationUserCount = cell(1,APNum);
AggregationPktNum_Ack_Count = cell(1,APNum);% format: Aggregated_PktNum Acked_PktNum Pkt_Buff_len
Count = {};
Buff_len_List = cell(1,APNum);
CW_List = cell(1,APNum);
PDR_List = cell(1,APNum);
CRC_List = cell(1,APNum);
% others
busy = 0;% channel state
collision = 0; % collision flag
max_time = 1;% second
current_time = 0;
DATA_Rate = RATE_List(2);
Basic_Rate = RATE_List(2);
% Traffic related
%Traffic_interval = 0.71*1e-3;% HDTV 600us per client,VOIP 20ms per client
Client_Traffic_interval = 12*1e-3;
Traffic_delay_List = cell(1,APNum);
% Aggregation related
Aggregation_delay = 0;% time to wait before aggregation
Aggregation_ra_num = 8;% 8 nodes
Aggregation_byte = inf;% bit
Aggregation_ra_index_List = cell(1,APNum);
Aggregation_ra_List = cell(1,APNum);
Ack_List = cell(1,APNum);
%Pkt_Buff_len = 14;% depend on the num. of receiver
% USRP PHY Trace ralated
Baseline = load('baseline.mat');
Baseline = Baseline.Baseline;
Enhancement = load('enhancement.mat');
Enhancement = Enhancement.Enhancement;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Node Initialize
for i = 1:APNum
   Node(i).id = AP_List(i);
   Node(i).x = 0;
   Node(i).y = 0;
   Node(i).CW = CW_min;
   Node(i).counter = nan;
   Node(i).mode = 'idle';
end

for i = 1:ClientNum
   Node(APNum+i).id = CLIENT_List(i);
   Node(APNum+i).x = 0;
   Node(APNum+i).y = 0;
   Node(APNum+i).CW = CW_min;
   Node(APNum+i).counter = nan;
   Node(APNum+i).mode = 'idle';
end
if debug,  Counter_List = [Node(:).counter];end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pkt_Buff Initialize
for i = 1:APNum
    Pkt_Buff{i}(1).ta = AP_List(i);
    Pkt_Buff{i}(1).ra = CLIENT_List(randi(ClientNum/APNum)+(i-1)*(ClientNum/APNum));
    Pkt_Buff{i}(1).len = 30*8;
    Pkt_Buff{i}(1).type = 'data';
    Pkt_Buff{i}(1).time = 0;
  
    %Pkt_Buff{i} = [Pkt_Buff{i};Pkt_Buff{i}(1)];
end
if debug, Pkt_Time_List = [Pkt_Buff{1}(:,1).time]; end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Event Initialize
Event_List = [];
for i = 1:APNum
    NewEvent.time = 0;
    NewEvent.type = 'generate_traffic';
    NewEvent.node = AP_List(i);
    NewEvent.pkt =  [];
    Event_List = [Event_List; NewEvent]; clear NewEvent;
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Event driven simulation loop
current_time = clock;
sim_current_time = 0;
ThroughPut_List = [];
while 1
    [min_time, min_index] = min([Event_List(:,1).time]);
    if isempty(min_time)
        break;
    end
    if min_time >= max_time
        break;
    end
    NewEvents = action(Event_List(min_index));

    % Delete the latest event which has been just executed.
    Event_List(min_index) = [];
    % Append new events generated by executing the latest event
    Event_List = [Event_List;NewEvents];
    
    time = min_time;
    if (time - sim_current_time) >= 1
        sim_current_time = time;
        ThroughPut_List = [ThroughPut_List,sum(cellfun(@sum,SentPktCount_List(1:2)))/(DATA_Rate*time)];
    end
    if etime(clock,current_time) > 10
        current_time = clock;
        disp(['time: ',num2str(time)]);
    end
end
disp(sum(cellfun(@sum,SentPktCount_List(1:2)))/(DATA_Rate*time));
disp(sum(cellfun(@sum,Traffic_delay_List))/sum(cellfun(@length,Traffic_delay_List)));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%Script
str = ['2ap',num2str(STANum),'client_VOIP.mat'];
save(str);
fid = fopen('test.txt','a');
fprintf(fid,'%s',str);
fprintf(fid,'\r\n');% enter for one row
fprintf(fid,'%.4f',sum(cellfun(@sum,SentPktCount_List(1:2)))/(DATA_Rate*time));
fprintf(fid,'\r\n');% enter for one rowfclose(fid)
dlmwrite('test.txt',ThroughPut_List, 'delimiter',' ', 'precision','%.4f','-append' );
fprintf(fid,'\r\n');% enter for one rowfclose(fid)
fclose(fid);
clear str;
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%Script